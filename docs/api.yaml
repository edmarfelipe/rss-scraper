openapi: "3.0.0"
info:
  version: 1.0.0
  title: RSS Scraper
  description: |
    This is a simple RSS scraper that fetches RSS feeds from a list of URLs and stores them in a database.

    # Introduction

    ## Features

    * A user can create an account
    * A user can create a feed
    * A user can follow a feed
    * A user can unfollow a feed
    * A user can view all feeds they follow
    * A user can view all posts from feeds they follow

    ## How to authenticate

    To authenticate, you need to pass the `X-Api-Key` header with the API Key value.

    ### Example

    ```bash
    curl -X GET "http://localhost:8080/users" -H "X-Api-Key: YOUR_API_KEY"
    ```
tags:
  - name: Public
    description: Public operations
  - name: User
    description: User operations
  - name: Feed
    description: Feed operations
  - name: Post
    description: Post operations

paths:
  /users:
    post:
      tags:
        - User
        - Public
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "John Doe"
            examples:
              CreateUserExample:
                value:
                  name: "Hello"
              CreateUserExample2:
                value:
                  name: "World"
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - User
      summary: Get user By API Key
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: User Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /feeds:
    post:
      tags:
        - Feed
      summary: Create feed
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - url
              properties:
                name:
                  type: string
                  example: "My Feed"
                url:
                  type: string
                  example: "https://example.com/feed.xml"
      responses:
        '201':
          description: Feed Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponseItem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Feed
      summary: Get feeds
      responses:
        '200':
          description: Feed Response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/FeedResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /feeds/follow:
    post:
      tags:
        - Feed
      summary: Follow feed
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - feed_id
              properties:
                feed_id:
                  type: string
                  example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '201':
          description: Feed Followed
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - feed_id
                  - user_id
                  - created_at
                  - updated_at
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  feed_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  user_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  created_at:
                    type: string
                    format: date-time
                    example: "2021-01-01T00:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2021-01-01T00:00:00Z"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Feed
        - Public
      summary: Get feeds to follow
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Feed Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "User not authorized"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /feeds/follow/{feed_fallow_id}:
    delete:
      tags:
        - Feed
      summary: Unfollow feed
      security:
        - ApiKeyAuth: []
      parameters:
        - name: feed_fallow_id
          in: path
          required: true
          description: Feed Follow ID
          schema:
            type: string
            format: uuid
            example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '204':
          description: Feed Unfollowed
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /posts:
    get:
      tags:
        - Post
      summary: Get posts by User
      security:
        - ApiKeyAuth: []
      parameters:
        - name: page
          in: query
          required: false
          description: Page number
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          description: Limit number
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Post Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: "Internal Server Error"
    UserResponse:
      type: object
      required:
        - id
        - name
        - api_key
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "John Doe"
        api_key:
          type: string
          example: "24234ee02c94ce92a501b3bb991d0830063418d73e0743936a3ae47de76398b3"
        created_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
    FeedResponse:
      type: object
      required:
        - feeds
      properties:
        feeds:
          type: array
          items:
            $ref: '#/components/schemas/FeedResponseItem'
    FeedResponseItem:
      type: object
      required:
        - id
        - name
        - url
        - created_at
        - updated_at
        - user_id
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "John Doe"
        url:
          type: string
          example: "https://example.com/feed.xml"
        created_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        user_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
    PostResponse:
      type: object
      required:
        - posts
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/PostResponseItem'
    PostResponseItem:
      type: object
      required:
        - id
        - title
        - url
        - published_at
        - created_at
        - updated_at
        - feed_id
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "My Post"
        url:
          type: string
          example: "https://example.com/post"
        content:
          type: string
          example: "This is my post"
        published_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        created_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        feed_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key

